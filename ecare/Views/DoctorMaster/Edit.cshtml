@model ecare.Models.Doctor

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_HospitalLayoutPage.cshtml";
}



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {


        $("#EntryBy").hide(); $("#HospitalId").hide();



    });
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DoctorId)
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.DoctorAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorSpecialization, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorSpecialization, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorSpecialization, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorDegree, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorDegree, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorDegree, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorPhone, new { htmlAttributes = new { @class = "form-control", @maxlength = "10", @placeholder = "91+" } })
                        @Html.ValidationMessageFor(model => model.DoctorPhone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorCity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorCity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorCity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorState, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorState, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorState, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorCountry, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorCountry, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorCountry, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group" id="HospitalId">
                    @Html.LabelFor(model => model.HospitalId, htmlAttributes: new { @class = "control-label col-md-2", id = "HospitalId" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HospitalId, new { htmlAttributes = new { @class = "form-control", @id = "HospitalId" } })
                        @Html.ValidationMessageFor(model => model.HospitalId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group" id="EntryBy">
                @Html.LabelFor(model => model.EntryBy, htmlAttributes: new { @class = "control-label col-md-2", @id = "EntryBy" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EntryBy, new { htmlAttributes = new { @class = "form-control", @id = "EntryBy" } })
                    @Html.ValidationMessageFor(model => model.EntryBy, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-custom" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "DoctorsList", "Hospitalmaster", null, new { @class = "btn btn-link" })
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

@if (ViewBag.SuccessMessage != null)
{
    <script type="text/javascript">
    $(function () {

            swal("Great!", "Updated Successfully", "success");
        });</script>
}
else if (ViewBag.ErrorMessage != null)
{

    <script type="text/javascript">
    $(function () {

            swal("Error", "Sorry, There is problem saving data", "error");
        });</script>
}