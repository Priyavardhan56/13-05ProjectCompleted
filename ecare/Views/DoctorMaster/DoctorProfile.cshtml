@model ecare.Models.Doctor

@{
    ViewBag.Title = "DoctorProfile";
    Layout = "~/Views/Shared/_DoctorLayoutPage.cshtml";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Your Profile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DoctorId)

        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorPhone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorCity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorCity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorCity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorState, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorState, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorState, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorCountry, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorCountry, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorCountry, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
            </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DoctorAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update" class="btn btn-custom" />
                    </div>
                </div>
            </div>
            }

